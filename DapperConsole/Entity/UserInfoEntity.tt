<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="$(ProjectDir)Entity/T4/DbHelper.ttinclude"  #>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//	   生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> AuthBy:cmm
//     对此文件的更改可能会导致不正确的行为，并且如果													   ·
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Text;
namespace DataEntity
{	
	public partial class <#=config.TableName#>Entity
    {
		#region 属性
		<# 
		List<DbColumn> lstDbColumn=DbHelper.GetDbColumns(DbCon.ConnectionString, config.DbDatabase, config.TableName);
		foreach(DbColumn column in lstDbColumn){#>
		
		/// <summary>
		/// <#= column.Remark#>
		/// </summary>		
		public <#= column.CSharpType#><# if(column.CommonType.IsValueType && column.IsNullable){#>?<#}#> <#=column.ColumnName#> { get; set; }
		<#}#> 
      #endregion

	  <#
StringBuilder defaultValues = new StringBuilder();
foreach(DbColumn col in lstDbColumn)
{
	string dVal = string.Empty;
	switch (col.CSharpType)
    {
        case "string":
        defaultValues.AppendLine("\t\t\tif (this." + col.ColumnName + " == null) this." + col.ColumnName + " = \"" + dVal + "\";");
            break;
        case "byte":
        case "decimal":
        case "int":
        case "long":
        case "short":
        case "double":
            {
                decimal val;
                decimal.TryParse(dVal, out val);
                if (val > 0) defaultValues.AppendLine("\t\t\tif (this." + col.ColumnName + " == 0) this." + col.ColumnName + " = 0;");
            }
            break;
        case "DateTime":
            {
                if (dVal.Contains("getdate"))
                {
                    defaultValues.AppendLine("\t\t\tif (this." + col.ColumnName + ".Year<1900) this." + col.ColumnName + " = DateTime.Now;");
                    continue;
                }
                defaultValues.AppendLine("\t\t\tif (this." + col.ColumnName + ".Year<1900) this." + col.ColumnName + " =  new DateTime(1900,01,01);");
            }
            break;
        case "bool":
            break;
        default:
            defaultValues.AppendLine("\t\t\tif (this." + col.ColumnName + " == null) this." + col.ColumnName + " = " + dVal + ";");
            break;
	}

}
#>
		///<summary>
		///set default value
		///</summary>
		public void SetDefaultValue()
		{
			<#=defaultValues.ToString()#>
		}


		#region 字段
		public static class Fields
		{
	   <#foreach(DbColumn item in lstDbColumn){#>
		public const string <#= item.ColumnName #> = "<#= item.ColumnName #>";
	   
	   <#}#>
	  }
		#endregion

		#region	基本SQL
        public static class Sql 
        {
		  <# 
			string tarSqlFields= String.Empty;
			StringBuilder fieldsSql= new StringBuilder();
			foreach(DbColumn cloumn in lstDbColumn){
				fieldsSql.AppendFormat("{0},",cloumn.ColumnName);
			}
			if(fieldsSql.Length>0){
				tarSqlFields=fieldsSql.ToString().Trim(',');
			}
		  #>

			//查询sql
			public static string selectSql="SELECT <#= tarSqlFields#> FROM <#= config.DbDatabase+".dbo."+config.TableName+" a WITH(NOLOCK) "#>";
        }
		#endregion


    }
}

<#+
	public class config
	{
		public static readonly string DbDatabase="TCInterVacationOVDResource";
		public static readonly string TableName="UserInfo";
	}
#>

